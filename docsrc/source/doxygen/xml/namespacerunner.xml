<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespacerunner" kind="namespace" language="Python">
    <compoundname>runner</compoundname>
    <innerclass refid="classrunner_1_1_v_a_r_t" prot="public">runner::VART</innerclass>
    <briefdescription>
<para>Executes the runner with the given inputs. </para>
    </briefdescription>
    <detaileddescription>
<para>The VART.Runner can take the following optional arguments to build a model: model methods to enable Zero copy The API can support zero copy feature for input and output buffers.</para>
<para>Such buffers are accessible directly by the NPU IP, and therefore have to be allocated physically in the DDR memory. A buffer allocated by a classic python function can&apos;t be used directly by the NPU. Only a buffer allocated by XRT can be used. As a consequence, the API provides a function to allocate the input buffers. The python application needs to write (like using np.copyto) into that buffer. However, the output buffers can be allocated directly by the SW stack, the inference call can return directly a physically allocated buffer.<itemizedlist>
<listitem><para>set_output_native_formats(bool) take a bool to enable native outputs</para>
</listitem><listitem><para>set_input_native_formats(bool) take a bool to enable native inputs</para>
</listitem><listitem><para>alloc_native_bufs(nbImages) allocate input buffers to be used for native input. nbImages is an optional argument, default value is the batch size of the snapshot. Returns a list of buffers of size nbInputs x nbImages with the same order as C++ stack, so for a 2 inputs batch size of 3: [inputA_batch0, inputB_batch0, inputA_batch1, inputB_batch1, inputA_batch2, inputB_batch2] Limitations for the zero copy API</para>
</listitem><listitem><para>input format is in NHWC.</para>
</listitem><listitem><para>maximum of input channels supported is 8.</para>
</listitem><listitem><para>model with multiple inputs with batchSize &gt; 1 hasn&apos;t been validated</para>
</listitem><listitem><para>input and output of the models don&apos;t have the same type as the classic mode:<itemizedlist>
<listitem><para>zero copy exposes each batch as a separate buffer. It allows having each buffer on a separate DDR memory, to optimize efficiency.</para>
</listitem><listitem><para>while the default mode concatenates each batch in the same buffer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>snapshot_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>path of the snapshot, default is to take the content of the variable environment VAISW_SNAPSHOT_DIRECTORY </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>network_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_names</parametername>
</parameternamelist>
<parameterdescription>
<para>list of output to return, default is to return all outputs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>npu_only</parametername>
</parameternamelist>
<parameterdescription>
<para>runs only the sub-graphs executed on the AIE, CPU subgraphs are ignored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>VART.Runner</para>
</simplesect>
Sample code:</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><programlisting><codeline><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VART</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">model<sp/>=<sp/>VART.Runner()</highlight></codeline>
<codeline><highlight class="normal">output_inference<sp/>=<sp/>model(input_inference)</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pydoc/runner.py" line="1" column="1"/>
  </compounddef>
</doxygen>
