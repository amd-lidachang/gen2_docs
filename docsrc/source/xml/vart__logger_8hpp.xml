<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="vart__logger_8hpp" kind="file" language="C++">
    <compoundname>vart_logger.hpp</compoundname>
    <includes local="no">syslog.h</includes>
    <includes local="no">chrono</includes>
    <includes local="no">cstdarg</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">map</includes>
    <includes local="no">mutex</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="yes">vart_logger_types.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>vart_logger.hpp</label>
        <link refid="vart__logger_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>chrono</label>
      </node>
      <node id="4">
        <label>cstdarg</label>
      </node>
      <node id="5">
        <label>cstdio</label>
      </node>
      <node id="6">
        <label>fstream</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="9">
        <label>mutex</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="2">
        <label>syslog.h</label>
      </node>
      <node id="12">
        <label>vart_logger_types.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classvart_1_1_logger" prot="public">vart::Logger</innerclass>
    <innernamespace refid="namespacevart">vart</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="vart__logger_8hpp_1abfb1efa87be1fdc2c964aca667e70f80" prot="public" static="no">
        <name>VART_LOG_REGISTER</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>obj.mod_register(x, y);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="36" column="9" bodyfile="cppdoc/vart_logger.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vart__logger_8hpp_1a20317ba421cf3e188ee6706e4a2a5e5a" prot="public" static="no">
        <name>VART_LOG_ERR_OBJ</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>  obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_ERROR, x, __FILE__, __func__, \
                          __LINE__, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="38" column="9" bodyfile="cppdoc/vart_logger.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vart__logger_8hpp_1a0db86a140bd4ec928bd16baf06863d3a" prot="public" static="no">
        <name>VART_LOG_WARN_OBJ</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>  obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_WARNING, x, __FILE__, __func__, \
                          __LINE__, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="41" column="9" bodyfile="cppdoc/vart_logger.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vart__logger_8hpp_1aac345d2d8d6eaa55446698d0e7b98313" prot="public" static="no">
        <name>VART_LOG_FIXME_OBJ</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>  obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_FIXME, x, __FILE__, __func__, \
                          __LINE__, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="44" column="9" bodyfile="cppdoc/vart_logger.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vart__logger_8hpp_1aba940db0b541a771f4680197e74563c1" prot="public" static="no">
        <name>VART_LOG_INFO_OBJ</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>  obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_INFO, x, __FILE__, __func__, \
                          __LINE__, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="47" column="9" bodyfile="cppdoc/vart_logger.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vart__logger_8hpp_1ae1a9c038c7c7d39debbc9103d34eadf3" prot="public" static="no">
        <name>VART_LOG_DEBUG_OBJ</name>
        <param><defname>x</defname></param>
        <param><defname>...</defname></param>
        <initializer>  obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_DEBUG, x, __FILE__, __func__, \
                          __LINE__, __VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="50" column="9" bodyfile="cppdoc/vart_logger.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vart__logger_8hpp_1a06b7a21010cd34876dc2ec9f5d8c2247" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int sys_log_level[]</definition>
        <argsstring>[]</argsstring>
        <name>sys_log_level</name>
        <qualifiedname>vart::sys_log_level</qualifiedname>
        <initializer>= {0,          LOG_ERR,  LOG_WARNING,
                                    LOG_NOTICE, LOG_INFO, LOG_DEBUG}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="54" column="18" bodyfile="cppdoc/vart_logger.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="vart__logger_8hpp_1a788ab0467284356567ff480a80a668de" prot="public" static="yes" mutable="no">
        <type>Logger &amp;</type>
        <definition>Logger&amp; obj</definition>
        <argsstring></argsstring>
        <name>obj</name>
        <qualifiedname>vart::obj</qualifiedname>
        <initializer>= Logger::get_instance()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cppdoc/vart_logger.hpp" line="160" column="15" bodyfile="cppdoc/vart_logger.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2024<sp/>Advanced<sp/>Micro<sp/>Devices<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VART_LOGGER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOGGER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syslog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vart_logger_types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vart<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>&apos;obj&apos;<sp/>object<sp/>is<sp/>created<sp/>as<sp/>static<sp/>object<sp/>and<sp/>shared<sp/>by<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>components<sp/>when<sp/>header<sp/>file<sp/>is<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOG_REGISTER(x,<sp/>y)<sp/>obj.mod_register(x,<sp/>y);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOG_ERR_OBJ(x,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_ERROR,<sp/>x,<sp/>__FILE__,<sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__LINE__,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOG_WARN_OBJ(x,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/>obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_WARNING,<sp/>x,<sp/>__FILE__,<sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__LINE__,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOG_FIXME_OBJ(x,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_FIXME,<sp/>x,<sp/>__FILE__,<sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__LINE__,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOG_INFO_OBJ(x,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_INFO,<sp/>x,<sp/>__FILE__,<sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__LINE__,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VART_LOG_DEBUG_OBJ(x,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/>obj.vart_logger_log_obj(LogLevel::LOG_LEVEL_DEBUG,<sp/>x,<sp/>__FILE__,<sp/>__func__,<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__LINE__,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sys_log_level[]<sp/>=<sp/>{0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_ERR,<sp/><sp/>LOG_WARNING,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOG_NOTICE,<sp/>LOG_INFO,<sp/>LOG_DEBUG};</highlight></codeline>
<codeline lineno="61" refid="classvart_1_1_logger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref>&amp;<sp/><ref refid="classvart_1_1_logger_1a331ac3fbdf05c568da9fe4bc1c5c401a" kindref="member">get_instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref><sp/>log_obj;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log_obj;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;struct<sp/>log_context&gt;<sp/><ref refid="classvart_1_1_logger_1ad95f94e5e95cff5398d4335ce053214e" kindref="member">mod_register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>modname,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>need_id);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvart_1_1_logger_1ae8e93aadf416fb3656676e14e842356b" kindref="member">vart_logger_log_obj</ref>(LogLevel,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;struct<sp/>log_context&gt;<sp/>ctx,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>func,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>line,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classvart_1_1_logger" kindref="compound">~Logger</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>LogLevel<sp/>global_log_level;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>LogLevel<sp/>level;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>LogType<sp/>type;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>std::mutex<sp/>reg_mutex;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>std::mutex<sp/>log_mutex;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>std::map&lt;std::string,<sp/>std::tuple&lt;int16_t,<sp/>uint16_t&gt;&gt;<sp/>vart_components;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>std::chrono::high_resolution_clock::time_point<sp/>logger_start_time;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::FILE*<sp/>log_file;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classvart_1_1_logger" kindref="compound">Logger</ref>&amp;<sp/>obj<sp/>=<sp/><ref refid="classvart_1_1_logger_1a331ac3fbdf05c568da9fe4bc1c5c401a" kindref="member">Logger::get_instance</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="cppdoc/vart_logger.hpp"/>
  </compounddef>
</doxygen>
