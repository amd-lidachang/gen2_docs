<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="runner_8py" kind="file" language="Python">
    <compoundname>runner.py</compoundname>
    <innerclass refid="classrunner_1_1_v_a_r_t" prot="public">runner::VART</innerclass>
    <innernamespace refid="namespacerunner">runner</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacerunner" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Executes<sp/>the<sp/>runner<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>given<sp/>inputs.<sp/>The<sp/>VART.Runner<sp/>can<sp/>take<sp/>the<sp/>following<sp/>optional<sp/>arguments<sp/>to<sp/>build<sp/>a<sp/>model:</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>methods<sp/>to<sp/>enable<sp/>Zero<sp/>copy</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>The<sp/>API<sp/>can<sp/>support<sp/>zero<sp/>copy<sp/>feature<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>input<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>output<sp/>buffers.</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>Such<sp/>buffers<sp/>are<sp/>accessible<sp/>directly<sp/>by<sp/>the<sp/>NPU<sp/>IP,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>therefore<sp/>have<sp/>to<sp/>be<sp/>allocated<sp/>physically<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>DDR<sp/>memory.<sp/>A<sp/>buffer<sp/>allocated<sp/>by<sp/>a<sp/>classic<sp/>python<sp/>function<sp/>can</highlight><highlight class="stringliteral">&apos;t<sp/>be<sp/>used<sp/>directly<sp/>by<sp/>the<sp/>NPU.<sp/>Only<sp/>a<sp/>buffer<sp/>allocated<sp/>by<sp/>XRT<sp/>can<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>As<sp/>a<sp/>consequence,<sp/>the<sp/>API<sp/>provides<sp/>a<sp/>function<sp/>to<sp/>allocate<sp/>the<sp/>input<sp/>buffers.<sp/>The<sp/>python<sp/>application<sp/>needs<sp/>to<sp/>write<sp/>(like<sp/>using<sp/>np.copyto)<sp/>into<sp/>that<sp/>buffer.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>However,<sp/>the<sp/>output<sp/>buffers<sp/>can<sp/>be<sp/>allocated<sp/>directly<sp/>by<sp/>the<sp/>SW<sp/>stack,<sp/>the<sp/>inference<sp/>call<sp/>can<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>directly<sp/>a<sp/>physically<sp/>allocated<sp/>buffer.</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>set_output_native_formats(bool)<sp/><sp/><sp/><sp/><sp/>take<sp/>a<sp/>bool<sp/>to<sp/>enable<sp/>native<sp/>outputs</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>set_input_native_formats(bool)<sp/><sp/><sp/><sp/><sp/><sp/>take<sp/>a<sp/>bool<sp/>to<sp/>enable<sp/>native<sp/>inputs</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>alloc_native_bufs(nbImages)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate<sp/>input<sp/>buffers<sp/>to<sp/>be<sp/>used<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>native<sp/>input.</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbImages<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>an<sp/>optional<sp/>argument,<sp/>default<sp/>value<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>the<sp/>batch<sp/>size<sp/>of<sp/>the<sp/>snapshot.</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>buffers<sp/>of<sp/>size<sp/>nbInputs<sp/>x<sp/>nbImages<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>same<sp/>order<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>C++<sp/>stack,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>so<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>2<sp/>inputs<sp/>batch<sp/>size<sp/>of<sp/>3:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[inputA_batch0,<sp/>inputB_batch0,<sp/>inputA_batch1,<sp/>inputB_batch1,<sp/>inputA_batch2,<sp/>inputB_batch2]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>Limitations<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>zero<sp/>copy<sp/>API</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>input<sp/>format<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>NHWC.</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>maximum<sp/>of<sp/>input<sp/>channels<sp/>supported<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>8.</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>model<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>multiple<sp/>inputs<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>batchSize<sp/>&gt;<sp/>1<sp/>hasn</highlight><highlight class="stringliteral">&apos;t<sp/>been<sp/>validated</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>input<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>output<sp/>of<sp/>the<sp/>models<sp/>don</highlight><highlight class="stringliteral">&apos;t<sp/>have<sp/>the<sp/>same<sp/>type<sp/>as<sp/>the<sp/>classic<sp/>mode:</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>zero<sp/>copy<sp/>exposes<sp/>each<sp/>batch<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>a<sp/>separate<sp/>buffer.<sp/>It<sp/>allows<sp/>having<sp/>each<sp/>buffer<sp/>on<sp/>a<sp/>separate<sp/>DDR<sp/>memory,<sp/>to<sp/>optimize<sp/>efficiency.</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>the<sp/>default<sp/>mode<sp/>concatenates<sp/>each<sp/>batch<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>same<sp/>buffer.</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>snapshot_dir<sp/>path<sp/>of<sp/>the<sp/>snapshot,<sp/>default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/>take<sp/>the<sp/>content<sp/>of<sp/>the<sp/>variable<sp/>environment<sp/>VAISW_SNAPSHOT_DIRECTORY</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>network_name<sp/>name<sp/>of<sp/>the<sp/>model</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>output_names<sp/>list<sp/>of<sp/>output<sp/>to<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">,<sp/>default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>all<sp/>outputs</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>npu_only<sp/>runs<sp/>only<sp/>the<sp/>sub-graphs<sp/>executed<sp/>on<sp/>the<sp/>AIE,<sp/>CPU<sp/>subgraphs<sp/>are<sp/>ignored</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/><sp/>VART.Runner</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Sample<sp/>code:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VART</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>VART.Runner()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>output_inference<sp/>=<sp/>model(input_inference)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@endcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal">!</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Executes<sp/>the<sp/>runner<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>given<sp/>inputs.<sp/>The<sp/>VART.Runner<sp/>can<sp/>take<sp/>the<sp/>following<sp/>optional<sp/>arguments<sp/>to<sp/>build<sp/>a<sp/>model:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>snapshot_dir<sp/>path<sp/>of<sp/>the<sp/>snapshot,<sp/>default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/>take<sp/>the<sp/>content<sp/>of<sp/>the<sp/>variable<sp/>environment<sp/>VAISW_SNAPSHOT_DIRECTORY</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>network_name<sp/>name<sp/>of<sp/>the<sp/>model</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>output_names<sp/>list<sp/>of<sp/>output<sp/>to<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">,<sp/>default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>all<sp/>outputs</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>npu_only<sp/>runs<sp/>only<sp/>the<sp/>sub-graphs<sp/>executed<sp/>on<sp/>the<sp/>AIE,<sp/>CPU<sp/>subgraphs<sp/>are<sp/>ignored</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/><sp/>The<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>by<sp/>VART.Runner<sp/>has<sp/>the<sp/>following<sp/>properties<sp/>:<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>input_shapes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>list<sp/>of<sp/>list<sp/>of<sp/>uint32<sp/>indicating<sp/>the<sp/>shape<sp/>of<sp/>each<sp/>input.</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/>input_shape_formats<sp/><sp/><sp/><sp/><sp/>a<sp/>list<sp/>of<sp/>string<sp/>indicating<sp/>the<sp/>format<sp/>of<sp/>each<sp/>input<sp/>(</highlight><highlight class="stringliteral">&apos;NCHW&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;NHWC&apos;</highlight><highlight class="normal">).</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>3.<sp/>input_types<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>list<sp/>of<sp/>datatype<sp/>indicating<sp/>the<sp/>type<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>input.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>4.<sp/>output_shape_formats<sp/><sp/><sp/><sp/>a<sp/>list<sp/>of<sp/>string<sp/>indicating<sp/>the<sp/>format<sp/>of<sp/>each<sp/>output<sp/>(</highlight><highlight class="stringliteral">&apos;NCHW&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;NHWC&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>Sample<sp/>code:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>VART</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>VART.Runner()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>output_inference<sp/>=<sp/>model(input_inference)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>VART.Runner()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>model.set_input_native_formats(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>model.set_output_native_formats(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>native_input<sp/>=<sp/>model.alloc_native_bufs()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>np.copyto(native_input[0],<sp/>input_infernce[0])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>output_inference<sp/>=<sp/>model(input_inference)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@endcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="68" refid="classrunner_1_1_v_a_r_t" refkind="compound"><highlight class="stringliteral">class<sp/>VART:</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>A<sp/>Python<sp/>API<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>VART,<sp/>providing<sp/>NPU-based<sp/>model<sp/>inference.</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wraps<sp/>the<sp/><ref refid="classrunner_1_1_v_a_r_t" kindref="compound">VART</ref><sp/>C++<sp/>API<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>Python,<sp/>leveraging<sp/>an<sp/>NPU<sp/>Runner<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>execution.</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a382684ca5b6c6b7cb376d543fd1ee4c7" kindref="member">__init__</ref>(self,<sp/>snapshot_dir:<sp/>str,<sp/>network_name:<sp/>str,<sp/>output_names:<sp/>Optional[List[str]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>npu_only:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Construct<sp/>a<sp/>new<sp/>VART<sp/>object<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>a<sp/>snapshot.</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>snapshot_dir<sp/>Directory<sp/>containing<sp/>the<sp/>snapshot.</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>network_name<sp/>Name<sp/>of<sp/>the<sp/>network.</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>output_names<sp/>Optional<sp/>list<sp/>of<sp/>output<sp/>tensor<sp/>names.</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>npu_only<sp/>If<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>use<sp/>NPU<sp/>exclusively<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>inference.</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>the<sp/>Runner<sp/>member<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrunner_1_1_v_a_r_t_1a5f902080cdaea3e0b5488745da2c9481" kindref="member">runner</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Placeholder<sp/>for<sp/>vart::Runner<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a2cb628515116fb559701021f5f64d60a" kindref="member">init_out_arrays</ref>(self,<sp/>use_native_bufs:<sp/>bool<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Initializes<sp/>output<sp/>arrays.</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>use_native_bufs<sp/>If<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>allocate<sp/>native<sp/>buffers<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>output<sp/>data.</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a80fd0415e14eb50bc3d695a9dffdde8d" kindref="member">alloc_native_bufs</ref>(self,<sp/>shape:<sp/>List[List[int]],<sp/>nb_images:<sp/>int)<sp/>-&gt;<sp/>List[np.ndarray]:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Allocates<sp/>native<sp/>buffers<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>given<sp/>shapes<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns<sp/>NumPy<sp/>arrays.</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>shape<sp/>List<sp/>of<sp/>shapes<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>buffers<sp/>to<sp/>allocate.</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>nb_images<sp/>Number<sp/>of<sp/>images<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>NumPy<sp/>arrays<sp/>pointing<sp/>to<sp/>the<sp/>allocated<sp/>buffers.</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1af5efa7f75dd7942076c652c58b3cf744" kindref="member">get_input_shapes</ref>(self)<sp/>-&gt;<sp/>List[List[int]]:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Gets<sp/>the<sp/>shapes<sp/>of<sp/>the<sp/>model</highlight><highlight class="stringliteral">&apos;s<sp/>input<sp/>tensors.</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>input<sp/>tensor<sp/>shapes.</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a947620d4226b51fc70e32f1adf30fff2" kindref="member">get_input_shape_formats</ref>(self)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Gets<sp/>the<sp/>shape<sp/>formats<sp/>of<sp/>the<sp/>model</highlight><highlight class="stringliteral">&apos;s<sp/>input<sp/>tensors.</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>input<sp/>shape<sp/>formats.</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1afa9da19f54550284b5eae277752cb3ad" kindref="member">get_output_shape_formats</ref>(self)<sp/>-&gt;<sp/>List[str]:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Gets<sp/>the<sp/>shape<sp/>formats<sp/>of<sp/>the<sp/>model</highlight><highlight class="stringliteral">&apos;s<sp/>output<sp/>tensors.</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>output<sp/>shape<sp/>formats.</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a0a2fe7b7cca1bc60f10c884ba0a19aeb" kindref="member">get_input_types</ref>(self)<sp/>-&gt;<sp/>List[np.dtype]:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Gets<sp/>the<sp/>data<sp/>types<sp/>of<sp/>the<sp/>model</highlight><highlight class="stringliteral">&apos;s<sp/>input<sp/>tensors.</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>NumPy<sp/>data<sp/>types<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>input<sp/>tensors.</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1aa54d69fde808dcb1ab783e6c8c826e18" kindref="member">set_input_native_formats</ref>(self,<sp/>value:<sp/>bool)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Sets<sp/>whether<sp/>input<sp/>buffers<sp/>are<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>native<sp/>format.</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>value<sp/>If<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>use<sp/>native<sp/>input<sp/>format.</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>format<sp/>was<sp/>set<sp/>successfully,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>otherwise.</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1ac952a22f707fe8d12a6751645bc8014b" kindref="member">set_output_native_formats</ref>(self,<sp/>value:<sp/>bool)<sp/>-&gt;<sp/>bool:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Sets<sp/>whether<sp/>output<sp/>buffers<sp/>are<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>native<sp/>format.</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>value<sp/>If<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>use<sp/>native<sp/>output<sp/>format.</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>format<sp/>was<sp/>set<sp/>successfully,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>otherwise.</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a7f1c53d1fca2aa5518d41fc04633919b" kindref="member">get_input_coeffs</ref>(self)<sp/>-&gt;<sp/>List[float]:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Gets<sp/>the<sp/>quantization<sp/>coefficients<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>input<sp/>tensors.</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>input<sp/>quantization<sp/>coefficients.</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1a4c0b13d223de37f65a74e66a2f205a18" kindref="member">get_output_coeffs</ref>(self)<sp/>-&gt;<sp/>List[float]:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Gets<sp/>the<sp/>quantization<sp/>coefficients<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>output<sp/>tensors.</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>output<sp/>quantization<sp/>coefficients.</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classrunner_1_1_v_a_r_t_1aba2fc5ce575ab798a60d6e1ac620833e" kindref="member">execute</ref>(self,<sp/>inputs:<sp/>List[np.ndarray])<sp/>-&gt;<sp/>List[np.ndarray]:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@brief</highlight><highlight class="normal"><sp/>Executes<sp/>the<sp/>model<sp/>using<sp/>the<sp/>Runner.</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@param</highlight><highlight class="normal"><sp/>inputs<sp/>List<sp/>of<sp/>input<sp/>buffers.</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@return</highlight><highlight class="normal"><sp/>List<sp/>of<sp/>output<sp/>buffers.</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight></codeline>
    </programlisting>
    <location file="pydoc/runner.py"/>
  </compounddef>
</doxygen>
